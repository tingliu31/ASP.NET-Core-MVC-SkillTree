@using X.PagedList
@using X.PagedList.Mvc.Core
@using Homework_SkillTree.Helpers
@model IPagedList<TransactionViewModel>

@{
    ViewData["Title"] = "記帳列表";
    var index = 1 + ((Model.PageNumber - 1) * Model.PageSize);
}

<h2>@ViewData["Title"]</h2>

<style>
    .table th,
    .table td {
        vertical-align: middle;
        text-align: center;
        white-space: nowrap;
        padding: 0.5rem 0.75rem;
    }

    .col-index {
        min-width: 30px;
    }

    .col-fixed {
        width: 80px;
    }

    .col-amount {
        min-width: 120px;
    }

    .remark-cell {
        max-width: 400px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        text-align: left;
    }

    .table {
        width: 100%;
        table-layout: auto;
    }

    .income-text {
        color: blue;
    }

    .expense-text {
        color: red;
    }

</style>

<table class="table table-bordered">
    <thead>
        <tr>
            <th class="col-index">#</th>
            <th class="col-fixed">類別</th>
            <th class="col-fixed">日期</th>
            <th class="col-amount">金額</th>
            <th class="remark-cell">備註</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var rowClass = item.TransactionType == TransactionType.Expense ? "table-secondary" : "";

            <tr class="@rowClass">
                <td>@index</td>
                <td class="@(item.TransactionType == TransactionType.Expense ? "expense-text" : "income-text")">
                    @EnumHelper.GetDisplayName(item.TransactionType)
                </td>
                <td>@item.Date.ToString("yyyy-MM-dd")</td>
                <td>@item.Amount.ToString("N0")</td>
                <td class="remark-cell">
                    @{
                        var remarkText = string.IsNullOrEmpty(item.Remark)
                        ? ""
                        : item.Remark.Length > 100
                        ? item.Remark.Substring(0, 100) + "..."
                        : item.Remark;
                    }
                    @remarkText
                </td>
            </tr>
            index++;
        }
    </tbody>
</table>

<div class="text-center">
    @Html.PagedListPager(
            Model,
            page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        DisplayLinkToIndividualPages = true,
        DisplayPageCountAndCurrentLocation = false,
        DisplayItemSliceAndTotal = false,
        MaximumPageNumbersToDisplay = 10,
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    }
            )
</div>